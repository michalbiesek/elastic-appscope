version: '2.2'
services:
  es01:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-7.17.0}"
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "${ES_HOST_PORT:-9200}:9200"
    networks:
      - elastic

  es02:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-7.17.0}"
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic

  es03:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-7.17.0}"
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic

  kib01:
    image: "docker.elastic.co/kibana/kibana:${KIBANA_VERSION:-7.17.0}"
    container_name: kib01
    ports:
      - "${KIBANA_HOST_PORT:-5601}:5601"
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
    networks:
      - elastic

  appscope01:
    image: "cribl/scope:${APPSCOPE_VERSION:-1.0.0}"
    container_name: appscope01
    environment:
      SCOPE_EVENT_METRIC: "true"
      SCOPE_EVENT_HTTP: "true"
      SCOPE_EVENT_NET: "true"
      SCOPE_EVENT_FS: "true"
      SCOPE_CRIBL: "${APPSCOPE_DEST:-tcp://cribl01:10070}"
      SCOPE_TAG_container_name: "appscope01"
      LD_PRELOAD: /usr/local/lib/libscope.so
    networks:
      - elastic

  appscope02:
    image: "cribl/scope:${APPSCOPE_VERSION:-1.0.0}"
    container_name: appscope02
    environment:
      SCOPE_EVENT_METRIC: "true"
      SCOPE_EVENT_HTTP: "true"
      SCOPE_EVENT_NET: "true"
      SCOPE_EVENT_FS: "true"
      SCOPE_CRIBL: "${APPSCOPE_DEST:-tcp://cribl01:10070}"
      SCOPE_TAG_container_name: "appscope02"
    networks:
      - elastic

  cribl01:
    image: "cribl/cribl:${CRIBL_VERSION:-3.3.0}"
    container_name: cribl01
    ports:
      - "${CRIBL_HOST_PORT:-9000}:9000"
    networks:
      - elastic

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge
